// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudinit.inputs;

import com.pulumi.cloudinit.inputs.GetConfigPart;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetConfigPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConfigPlainArgs Empty = new GetConfigPlainArgs();

    /**
     * Base64 encoding of the rendered output. Defaults to `true`,
     * and cannot be disabled if `gzip` is `true`.
     * 
     */
    @Import(name="base64Encode")
    private @Nullable Boolean base64Encode;

    /**
     * @return Base64 encoding of the rendered output. Defaults to `true`,
     * and cannot be disabled if `gzip` is `true`.
     * 
     */
    public Optional<Boolean> base64Encode() {
        return Optional.ofNullable(this.base64Encode);
    }

    /**
     * Define the Writer&#39;s default boundary separator. Defaults to `MIMEBOUNDARY`.
     * 
     */
    @Import(name="boundary")
    private @Nullable String boundary;

    /**
     * @return Define the Writer&#39;s default boundary separator. Defaults to `MIMEBOUNDARY`.
     * 
     */
    public Optional<String> boundary() {
        return Optional.ofNullable(this.boundary);
    }

    /**
     * Specify whether or not to gzip the rendered output. Defaults to `true`.
     * 
     */
    @Import(name="gzip")
    private @Nullable Boolean gzip;

    /**
     * @return Specify whether or not to gzip the rendered output. Defaults to `true`.
     * 
     */
    public Optional<Boolean> gzip() {
        return Optional.ofNullable(this.gzip);
    }

    /**
     * A nested block type which adds a file to the generated
     * cloud-init configuration. Use multiple `part` blocks to specify multiple
     * files, which will be included in order of declaration in the final MIME
     * document.
     * 
     */
    @Import(name="parts", required=true)
    private List<GetConfigPart> parts;

    /**
     * @return A nested block type which adds a file to the generated
     * cloud-init configuration. Use multiple `part` blocks to specify multiple
     * files, which will be included in order of declaration in the final MIME
     * document.
     * 
     */
    public List<GetConfigPart> parts() {
        return this.parts;
    }

    private GetConfigPlainArgs() {}

    private GetConfigPlainArgs(GetConfigPlainArgs $) {
        this.base64Encode = $.base64Encode;
        this.boundary = $.boundary;
        this.gzip = $.gzip;
        this.parts = $.parts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConfigPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConfigPlainArgs $;

        public Builder() {
            $ = new GetConfigPlainArgs();
        }

        public Builder(GetConfigPlainArgs defaults) {
            $ = new GetConfigPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param base64Encode Base64 encoding of the rendered output. Defaults to `true`,
         * and cannot be disabled if `gzip` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder base64Encode(@Nullable Boolean base64Encode) {
            $.base64Encode = base64Encode;
            return this;
        }

        /**
         * @param boundary Define the Writer&#39;s default boundary separator. Defaults to `MIMEBOUNDARY`.
         * 
         * @return builder
         * 
         */
        public Builder boundary(@Nullable String boundary) {
            $.boundary = boundary;
            return this;
        }

        /**
         * @param gzip Specify whether or not to gzip the rendered output. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder gzip(@Nullable Boolean gzip) {
            $.gzip = gzip;
            return this;
        }

        /**
         * @param parts A nested block type which adds a file to the generated
         * cloud-init configuration. Use multiple `part` blocks to specify multiple
         * files, which will be included in order of declaration in the final MIME
         * document.
         * 
         * @return builder
         * 
         */
        public Builder parts(List<GetConfigPart> parts) {
            $.parts = parts;
            return this;
        }

        /**
         * @param parts A nested block type which adds a file to the generated
         * cloud-init configuration. Use multiple `part` blocks to specify multiple
         * files, which will be included in order of declaration in the final MIME
         * document.
         * 
         * @return builder
         * 
         */
        public Builder parts(GetConfigPart... parts) {
            return parts(List.of(parts));
        }

        public GetConfigPlainArgs build() {
            $.parts = Objects.requireNonNull($.parts, "expected parameter 'parts' to be non-null");
            return $;
        }
    }

}
