// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudinit;

import com.pulumi.cloudinit.ConfigArgs;
import com.pulumi.cloudinit.Utilities;
import com.pulumi.cloudinit.inputs.ConfigState;
import com.pulumi.cloudinit.outputs.ConfigPart;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * &gt; **This resource is deprecated** Please use the cloudinit.Config
 * data source instead.
 * 
 * Renders a [multi-part MIME configuration](https://cloudinit.readthedocs.io/en/latest/explanation/format.html#mime-multi-part-archive) for use with [cloud-init](https://cloudinit.readthedocs.io/en/latest/).
 * 
 * Cloud-init is a commonly-used startup configuration utility for cloud compute instances. It accepts configuration via provider-specific user data mechanisms, such as `user_data` for Amazon EC2 instances. Multi-part MIME is one of the data formats it accepts. For more information, see [User-Data Formats](https://cloudinit.readthedocs.io/en/latest/explanation/format.html) in the cloud-init manual.
 * 
 * This is not a generalized utility for producing multi-part MIME messages. It&#39;s feature set is specialized for cloud-init multi-part MIME messages.
 * 
 * ## Example Usage
 * 
 * ### Config
 * 
 * ### hello-script.sh
 * 
 * ### cloud-config.yaml
 * 
 * &lt;!-- This schema was originally generated with tfplugindocs, then modified manually to ensure `part` block list is noted as Required --&gt;
 * 
 */
@ResourceType(type="cloudinit:index/config:Config")
public class Config extends com.pulumi.resources.CustomResource {
    /**
     * Specify whether or not to base64 encode the `rendered` output. Defaults to `true`, and cannot be disabled if gzip is `true`.
     * 
     */
    @Export(name="base64Encode", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> base64Encode;

    /**
     * @return Specify whether or not to base64 encode the `rendered` output. Defaults to `true`, and cannot be disabled if gzip is `true`.
     * 
     */
    public Output<Boolean> base64Encode() {
        return this.base64Encode;
    }
    /**
     * Specify the Writer&#39;s default boundary separator. Defaults to `MIMEBOUNDARY`.
     * 
     */
    @Export(name="boundary", refs={String.class}, tree="[0]")
    private Output<String> boundary;

    /**
     * @return Specify the Writer&#39;s default boundary separator. Defaults to `MIMEBOUNDARY`.
     * 
     */
    public Output<String> boundary() {
        return this.boundary;
    }
    /**
     * Specify whether or not to gzip the `rendered` output. Defaults to `true`.
     * 
     */
    @Export(name="gzip", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> gzip;

    /**
     * @return Specify whether or not to gzip the `rendered` output. Defaults to `true`.
     * 
     */
    public Output<Boolean> gzip() {
        return this.gzip;
    }
    /**
     * A nested block type which adds a file to the generated cloud-init configuration. Use multiple `part` blocks to specify multiple files, which will be included in order of declaration in the final MIME document.
     * 
     */
    @Export(name="parts", refs={List.class,ConfigPart.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ConfigPart>> parts;

    /**
     * @return A nested block type which adds a file to the generated cloud-init configuration. Use multiple `part` blocks to specify multiple files, which will be included in order of declaration in the final MIME document.
     * 
     */
    public Output<Optional<List<ConfigPart>>> parts() {
        return Codegen.optional(this.parts);
    }
    /**
     * The final rendered multi-part cloud-init config.
     * 
     */
    @Export(name="rendered", refs={String.class}, tree="[0]")
    private Output<String> rendered;

    /**
     * @return The final rendered multi-part cloud-init config.
     * 
     */
    public Output<String> rendered() {
        return this.rendered;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Config(java.lang.String name) {
        this(name, ConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Config(java.lang.String name, @Nullable ConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Config(java.lang.String name, @Nullable ConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudinit:index/config:Config", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Config(java.lang.String name, Output<java.lang.String> id, @Nullable ConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudinit:index/config:Config", name, state, makeResourceOptions(options, id), false);
    }

    private static ConfigArgs makeArgs(@Nullable ConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ConfigArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Config get(java.lang.String name, Output<java.lang.String> id, @Nullable ConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Config(name, id, state, options);
    }
}
