{
    "name": "cloudinit",
    "description": "A Pulumi package for creating and managing cloudinit cloud resources.",
    "keywords": [
        "pulumi",
        "cloudinit"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`cloudinit` Terraform Provider](https://github.com/hashicorp/terraform-provider-cloudinit).",
    "repository": "https://github.com/pulumi/pulumi-cloudinit",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {},
    "types": {
        "cloudinit:index/ConfigPart:ConfigPart": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "contentType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filename": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mergeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "cloudinit:index/getConfigPart:getConfigPart": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Body content for the part.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "contentType": {
                    "type": "string",
                    "description": "A MIME-style content type to report in the header for the part.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filename": {
                    "type": "string",
                    "description": "A filename to report in the header for the part.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mergeType": {
                    "type": "string",
                    "description": "A value for the `X-Merge-Type` header of the part,\nto control [cloud-init merging behavior](https://cloudinit.readthedocs.io/en/latest/topics/merging.html).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the cloudinit package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n"
    },
    "resources": {
        "cloudinit:index/config:Config": {
            "properties": {
                "base64Encode": {
                    "type": "boolean"
                },
                "boundary": {
                    "type": "string"
                },
                "gzip": {
                    "type": "boolean"
                },
                "parts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudinit:index/ConfigPart:ConfigPart"
                    }
                },
                "rendered": {
                    "type": "string",
                    "description": "rendered cloudinit configuration\n"
                }
            },
            "required": [
                "parts",
                "rendered"
            ],
            "inputProperties": {
                "base64Encode": {
                    "type": "boolean"
                },
                "boundary": {
                    "type": "string"
                },
                "gzip": {
                    "type": "boolean"
                },
                "parts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudinit:index/ConfigPart:ConfigPart"
                    }
                }
            },
            "requiredInputs": [
                "parts"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Config resources.\n",
                "properties": {
                    "base64Encode": {
                        "type": "boolean"
                    },
                    "boundary": {
                        "type": "string"
                    },
                    "gzip": {
                        "type": "boolean"
                    },
                    "parts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudinit:index/ConfigPart:ConfigPart"
                        }
                    },
                    "rendered": {
                        "type": "string",
                        "description": "rendered cloudinit configuration\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "cloudinit:index/getConfig:getConfig": {
            "description": "Renders a [multipart MIME configuration](https://cloudinit.readthedocs.io/en/latest/topics/format.html#mime-multi-part-archive)\nfor use with [cloud-init](https://cloudinit.readthedocs.io/).\n\nCloud-init is a commonly-used startup configuration utility for cloud compute\ninstances. It accepts configuration via provider-specific user data mechanisms,\nsuch as `user_data` for Amazon EC2 instances. Multipart MIME is one of the\ndata formats it accepts. For more information, see\n[User-Data Formats](https://cloudinit.readthedocs.io/en/latest/topics/format.html)\nin the cloud-init manual.\n\nThis is not a generalized utility for producing multipart MIME messages. Its\nfeatureset is specialized for the features of cloud-init.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudinit from \"@pulumi/cloudinit\";\n\nconst foo = pulumi.output(cloudinit.getConfig({\n    base64Encode: false,\n    gzip: false,\n    parts: [{\n        content: \"baz\",\n        contentType: \"text/x-shellscript\",\n        filename: \"foobar.sh\",\n    }],\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_cloudinit as cloudinit\n\nfoo = cloudinit.get_config(base64_encode=False,\n    gzip=False,\n    parts=[cloudinit.GetConfigPartArgs(\n        content=\"baz\",\n        content_type=\"text/x-shellscript\",\n        filename=\"foobar.sh\",\n    )])\n```\n```csharp\nusing Pulumi;\nusing CloudInit = Pulumi.CloudInit;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo = Output.Create(CloudInit.GetConfig.InvokeAsync(new CloudInit.GetConfigArgs\n        {\n            Base64Encode = false,\n            Gzip = false,\n            Parts = \n            {\n                new CloudInit.Inputs.GetConfigPartArgs\n                {\n                    Content = \"baz\",\n                    ContentType = \"text/x-shellscript\",\n                    Filename = \"foobar.sh\",\n                },\n            },\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudinit/sdk/go/cloudinit\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := false\n\t\topt1 := false\n\t\t_, err := cloudinit.LookupConfig(ctx, \u0026cloudinit.LookupConfigArgs{\n\t\t\tBase64Encode: \u0026opt0,\n\t\t\tGzip:         \u0026opt1,\n\t\t\tParts: []cloudinit.GetConfigPart{\n\t\t\t\tcloudinit.GetConfigPart{\n\t\t\t\t\tContent:     \"baz\",\n\t\t\t\t\tContentType: \"text/x-shellscript\",\n\t\t\t\t\tFilename:    \"foobar.sh\",\n\t\t\t\t},\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getConfig.\n",
                "properties": {
                    "base64Encode": {
                        "type": "boolean",
                        "description": "Base64 encoding of the rendered output. Defaults to `true`,\nand cannot be disabled if `gzip` is `true`.\n"
                    },
                    "boundary": {
                        "type": "string",
                        "description": "Define the Writer's default boundary separator. Defaults to `MIMEBOUNDARY`.\n"
                    },
                    "gzip": {
                        "type": "boolean",
                        "description": "Specify whether or not to gzip the rendered output. Defaults to `true`.\n"
                    },
                    "parts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudinit:index/getConfigPart:getConfigPart"
                        },
                        "description": "A nested block type which adds a file to the generated\ncloud-init configuration. Use multiple `part` blocks to specify multiple\nfiles, which will be included in order of declaration in the final MIME\ndocument.\n"
                    }
                },
                "type": "object",
                "required": [
                    "parts"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getConfig.\n",
                "properties": {
                    "base64Encode": {
                        "type": "boolean"
                    },
                    "boundary": {
                        "type": "string"
                    },
                    "gzip": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "parts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudinit:index/getConfigPart:getConfigPart"
                        }
                    },
                    "rendered": {
                        "type": "string",
                        "description": "The final rendered multi-part cloud-init config.\n"
                    }
                },
                "type": "object",
                "required": [
                    "parts",
                    "rendered",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "cloudinit": "CloudInit"
            },
            "packageReferences": {
                "Pulumi": "3.*-*",
                "System.Collections.Immutable": "1.6.0"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-cloudinit/sdk/go/cloudinit"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0-alpha.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing cloudinit cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/hashicorp/terraform-provider-cloudinit)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-cloudinit` repo](https://github.com/pulumi/pulumi-cloudinit/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`hashicorp/terraform-provider-cloudinit` repo](https://github.com/hashicorp/terraform-provider-cloudinit/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/hashicorp/terraform-provider-cloudinit)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-cloudinit` repo](https://github.com/pulumi/pulumi-cloudinit/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`hashicorp/terraform-provider-cloudinit` repo](https://github.com/hashicorp/terraform-provider-cloudinit/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0a1,\u003c4.0.0"
            }
        }
    }
}