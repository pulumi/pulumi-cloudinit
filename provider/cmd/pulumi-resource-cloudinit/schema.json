{
    "name": "cloudinit",
    "description": "A Pulumi package for creating and managing cloudinit cloud resources.",
    "keywords": [
        "pulumi",
        "cloudinit"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`cloudinit` Terraform Provider](https://github.com/hashicorp/terraform-provider-cloudinit).",
    "repository": "https://github.com/pulumi/pulumi-cloudinit",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "namespaces": {
                "cloudinit": "CloudInit"
            },
            "compatibility": "tfbridge20"
        },
        "go": {
            "importBasePath": "github.com/pulumi/pulumi-cloudinit/sdk/go/cloudinit",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing cloudinit cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/hashicorp/terraform-provider-cloudinit)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-cloudinit` repo](https://github.com/pulumi/pulumi-cloudinit/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-cloudinit` repo](https://github.com/hashicorp/terraform-provider-cloudinit/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/hashicorp/terraform-provider-cloudinit)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-cloudinit` repo](https://github.com/pulumi/pulumi-cloudinit/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-cloudinit` repo](https://github.com/hashicorp/terraform-provider-cloudinit/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {},
    "types": {
        "cloudinit:index/ConfigPart:ConfigPart": {
            "properties": {
                "content": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "contentType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "filename": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "mergeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "cloudinit:index/getConfigPart:getConfigPart": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Body content for the part.\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "A MIME-style content type to report in the header for the part.\n"
                },
                "filename": {
                    "type": "string",
                    "description": "A filename to report in the header for the part.\n"
                },
                "mergeType": {
                    "type": "string",
                    "description": "A value for the `X-Merge-Type` header of the part,\nto control [cloud-init merging behavior](https://cloudinit.readthedocs.io/en/latest/topics/merging.html).\n"
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the cloudinit package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n"
    },
    "resources": {
        "cloudinit:index/config:Config": {
            "properties": {
                "base64Encode": {
                    "type": "boolean"
                },
                "boundary": {
                    "type": "string"
                },
                "gzip": {
                    "type": "boolean"
                },
                "parts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudinit:index/ConfigPart:ConfigPart"
                    }
                },
                "rendered": {
                    "type": "string",
                    "description": "rendered cloudinit configuration\n"
                }
            },
            "required": [
                "parts",
                "rendered"
            ],
            "inputProperties": {
                "base64Encode": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "boundary": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "gzip": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "parts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudinit:index/ConfigPart:ConfigPart"
                    },
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "parts"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Config resources.\n",
                "properties": {
                    "base64Encode": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "boundary": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "gzip": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "parts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudinit:index/ConfigPart:ConfigPart"
                        },
                        "willReplaceOnChanges": true
                    },
                    "rendered": {
                        "type": "string",
                        "description": "rendered cloudinit configuration\n"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "This resource is deprecated.\nPlease use the getConfig data source instead."
        }
    },
    "functions": {
        "cloudinit:index/getConfig:getConfig": {
            "description": "Renders a [multipart MIME configuration](https://cloudinit.readthedocs.io/en/latest/topics/format.html#mime-multi-part-archive)\nfor use with [cloud-init](https://cloudinit.readthedocs.io/).\n\nCloud-init is a commonly-used startup configuration utility for cloud compute\ninstances. It accepts configuration via provider-specific user data mechanisms,\nsuch as `user_data` for Amazon EC2 instances. Multipart MIME is one of the\ndata formats it accepts. For more information, see\n[User-Data Formats](https://cloudinit.readthedocs.io/en/latest/topics/format.html)\nin the cloud-init manual.\n\nThis is not a generalized utility for producing multipart MIME messages. Its\nfeatureset is specialized for the features of cloud-init.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudinit from \"@pulumi/cloudinit\";\n\nconst foo = cloudinit.getConfig({\n    base64Encode: false,\n    gzip: false,\n    parts: [{\n        content: \"baz\",\n        contentType: \"text/x-shellscript\",\n        filename: \"foobar.sh\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudinit as cloudinit\n\nfoo = cloudinit.get_config(base64_encode=False,\n    gzip=False,\n    parts=[cloudinit.GetConfigPartArgs(\n        content=\"baz\",\n        content_type=\"text/x-shellscript\",\n        filename=\"foobar.sh\",\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudInit = Pulumi.CloudInit;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = CloudInit.GetConfig.Invoke(new()\n    {\n        Base64Encode = false,\n        Gzip = false,\n        Parts = new[]\n        {\n            new CloudInit.Inputs.GetConfigPartInputArgs\n            {\n                Content = \"baz\",\n                ContentType = \"text/x-shellscript\",\n                Filename = \"foobar.sh\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudinit/sdk/go/cloudinit\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudinit.LookupConfig(ctx, \u0026cloudinit.LookupConfigArgs{\n\t\t\tBase64Encode: pulumi.BoolRef(false),\n\t\t\tGzip:         pulumi.BoolRef(false),\n\t\t\tParts: []cloudinit.GetConfigPart{\n\t\t\t\t{\n\t\t\t\t\tContent:     \"baz\",\n\t\t\t\t\tContentType: pulumi.StringRef(\"text/x-shellscript\"),\n\t\t\t\t\tFilename:    pulumi.StringRef(\"foobar.sh\"),\n\t\t\t\t},\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudinit.CloudinitFunctions;\nimport com.pulumi.cloudinit.inputs.GetConfigArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = CloudinitFunctions.getConfig(GetConfigArgs.builder()\n            .base64Encode(false)\n            .gzip(false)\n            .parts(GetConfigPartArgs.builder()\n                .content(\"baz\")\n                .contentType(\"text/x-shellscript\")\n                .filename(\"foobar.sh\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: cloudinit:getConfig\n      Arguments:\n        base64Encode: false\n        gzip: false\n        parts:\n          - content: baz\n            contentType: text/x-shellscript\n            filename: foobar.sh\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getConfig.\n",
                "properties": {
                    "base64Encode": {
                        "type": "boolean",
                        "description": "Base64 encoding of the rendered output. Defaults to `true`,\nand cannot be disabled if `gzip` is `true`.\n"
                    },
                    "boundary": {
                        "type": "string",
                        "description": "Define the Writer's default boundary separator. Defaults to `MIMEBOUNDARY`.\n"
                    },
                    "gzip": {
                        "type": "boolean",
                        "description": "Specify whether or not to gzip the rendered output. Defaults to `true`.\n"
                    },
                    "parts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudinit:index/getConfigPart:getConfigPart"
                        },
                        "description": "A nested block type which adds a file to the generated\ncloud-init configuration. Use multiple `part` blocks to specify multiple\nfiles, which will be included in order of declaration in the final MIME\ndocument.\n"
                    }
                },
                "type": "object",
                "required": [
                    "parts"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getConfig.\n",
                "properties": {
                    "base64Encode": {
                        "type": "boolean"
                    },
                    "boundary": {
                        "type": "string"
                    },
                    "gzip": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "parts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudinit:index/getConfigPart:getConfigPart"
                        }
                    },
                    "rendered": {
                        "type": "string",
                        "description": "The final rendered multi-part cloud-init config.\n"
                    }
                },
                "type": "object",
                "required": [
                    "parts",
                    "rendered",
                    "id"
                ]
            }
        }
    }
}