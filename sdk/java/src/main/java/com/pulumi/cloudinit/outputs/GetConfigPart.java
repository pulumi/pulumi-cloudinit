// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudinit.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetConfigPart {
    /**
     * @return Body content for the part.
     * 
     */
    private String content;
    /**
     * @return A MIME-style content type to report in the header for the part. Defaults to `text/plain`
     * 
     */
    private String contentType;
    /**
     * @return A filename to report in the header for the part.
     * 
     */
    private @Nullable String filename;
    /**
     * @return A value for the `X-Merge-Type` header of the part, to control [cloud-init merging behavior](https://cloudinit.readthedocs.io/en/latest/reference/merging.html).
     * 
     */
    private @Nullable String mergeType;

    private GetConfigPart() {}
    /**
     * @return Body content for the part.
     * 
     */
    public String content() {
        return this.content;
    }
    /**
     * @return A MIME-style content type to report in the header for the part. Defaults to `text/plain`
     * 
     */
    public String contentType() {
        return this.contentType;
    }
    /**
     * @return A filename to report in the header for the part.
     * 
     */
    public Optional<String> filename() {
        return Optional.ofNullable(this.filename);
    }
    /**
     * @return A value for the `X-Merge-Type` header of the part, to control [cloud-init merging behavior](https://cloudinit.readthedocs.io/en/latest/reference/merging.html).
     * 
     */
    public Optional<String> mergeType() {
        return Optional.ofNullable(this.mergeType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigPart defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String content;
        private String contentType;
        private @Nullable String filename;
        private @Nullable String mergeType;
        public Builder() {}
        public Builder(GetConfigPart defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.contentType = defaults.contentType;
    	      this.filename = defaults.filename;
    	      this.mergeType = defaults.mergeType;
        }

        @CustomType.Setter
        public Builder content(String content) {
            if (content == null) {
              throw new MissingRequiredPropertyException("GetConfigPart", "content");
            }
            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder contentType(String contentType) {
            if (contentType == null) {
              throw new MissingRequiredPropertyException("GetConfigPart", "contentType");
            }
            this.contentType = contentType;
            return this;
        }
        @CustomType.Setter
        public Builder filename(@Nullable String filename) {

            this.filename = filename;
            return this;
        }
        @CustomType.Setter
        public Builder mergeType(@Nullable String mergeType) {

            this.mergeType = mergeType;
            return this;
        }
        public GetConfigPart build() {
            final var _resultValue = new GetConfigPart();
            _resultValue.content = content;
            _resultValue.contentType = contentType;
            _resultValue.filename = filename;
            _resultValue.mergeType = mergeType;
            return _resultValue;
        }
    }
}
