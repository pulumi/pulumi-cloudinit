// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudinit

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConfigPart struct {
	Content     string  `pulumi:"content"`
	ContentType *string `pulumi:"contentType"`
	Filename    *string `pulumi:"filename"`
	MergeType   *string `pulumi:"mergeType"`
}

// ConfigPartInput is an input type that accepts ConfigPartArgs and ConfigPartOutput values.
// You can construct a concrete instance of `ConfigPartInput` via:
//
//          ConfigPartArgs{...}
type ConfigPartInput interface {
	pulumi.Input

	ToConfigPartOutput() ConfigPartOutput
	ToConfigPartOutputWithContext(context.Context) ConfigPartOutput
}

type ConfigPartArgs struct {
	Content     pulumi.StringInput    `pulumi:"content"`
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	Filename    pulumi.StringPtrInput `pulumi:"filename"`
	MergeType   pulumi.StringPtrInput `pulumi:"mergeType"`
}

func (ConfigPartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigPart)(nil)).Elem()
}

func (i ConfigPartArgs) ToConfigPartOutput() ConfigPartOutput {
	return i.ToConfigPartOutputWithContext(context.Background())
}

func (i ConfigPartArgs) ToConfigPartOutputWithContext(ctx context.Context) ConfigPartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigPartOutput)
}

// ConfigPartArrayInput is an input type that accepts ConfigPartArray and ConfigPartArrayOutput values.
// You can construct a concrete instance of `ConfigPartArrayInput` via:
//
//          ConfigPartArray{ ConfigPartArgs{...} }
type ConfigPartArrayInput interface {
	pulumi.Input

	ToConfigPartArrayOutput() ConfigPartArrayOutput
	ToConfigPartArrayOutputWithContext(context.Context) ConfigPartArrayOutput
}

type ConfigPartArray []ConfigPartInput

func (ConfigPartArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigPart)(nil)).Elem()
}

func (i ConfigPartArray) ToConfigPartArrayOutput() ConfigPartArrayOutput {
	return i.ToConfigPartArrayOutputWithContext(context.Background())
}

func (i ConfigPartArray) ToConfigPartArrayOutputWithContext(ctx context.Context) ConfigPartArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigPartArrayOutput)
}

type ConfigPartOutput struct{ *pulumi.OutputState }

func (ConfigPartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigPart)(nil)).Elem()
}

func (o ConfigPartOutput) ToConfigPartOutput() ConfigPartOutput {
	return o
}

func (o ConfigPartOutput) ToConfigPartOutputWithContext(ctx context.Context) ConfigPartOutput {
	return o
}

func (o ConfigPartOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigPart) string { return v.Content }).(pulumi.StringOutput)
}

func (o ConfigPartOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigPart) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

func (o ConfigPartOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigPart) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

func (o ConfigPartOutput) MergeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigPart) *string { return v.MergeType }).(pulumi.StringPtrOutput)
}

type ConfigPartArrayOutput struct{ *pulumi.OutputState }

func (ConfigPartArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigPart)(nil)).Elem()
}

func (o ConfigPartArrayOutput) ToConfigPartArrayOutput() ConfigPartArrayOutput {
	return o
}

func (o ConfigPartArrayOutput) ToConfigPartArrayOutputWithContext(ctx context.Context) ConfigPartArrayOutput {
	return o
}

func (o ConfigPartArrayOutput) Index(i pulumi.IntInput) ConfigPartOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigPart {
		return vs[0].([]ConfigPart)[vs[1].(int)]
	}).(ConfigPartOutput)
}

type GetConfigPart struct {
	// Body content for the part.
	Content string `pulumi:"content"`
	// A MIME-style content type to report in the header for the part.
	ContentType *string `pulumi:"contentType"`
	// A filename to report in the header for the part.
	Filename *string `pulumi:"filename"`
	// A value for the `X-Merge-Type` header of the part,
	// to control [cloud-init merging behavior](https://cloudinit.readthedocs.io/en/latest/topics/merging.html).
	MergeType *string `pulumi:"mergeType"`
}

// GetConfigPartInput is an input type that accepts GetConfigPartArgs and GetConfigPartOutput values.
// You can construct a concrete instance of `GetConfigPartInput` via:
//
//          GetConfigPartArgs{...}
type GetConfigPartInput interface {
	pulumi.Input

	ToGetConfigPartOutput() GetConfigPartOutput
	ToGetConfigPartOutputWithContext(context.Context) GetConfigPartOutput
}

type GetConfigPartArgs struct {
	// Body content for the part.
	Content pulumi.StringInput `pulumi:"content"`
	// A MIME-style content type to report in the header for the part.
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	// A filename to report in the header for the part.
	Filename pulumi.StringPtrInput `pulumi:"filename"`
	// A value for the `X-Merge-Type` header of the part,
	// to control [cloud-init merging behavior](https://cloudinit.readthedocs.io/en/latest/topics/merging.html).
	MergeType pulumi.StringPtrInput `pulumi:"mergeType"`
}

func (GetConfigPartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigPart)(nil)).Elem()
}

func (i GetConfigPartArgs) ToGetConfigPartOutput() GetConfigPartOutput {
	return i.ToGetConfigPartOutputWithContext(context.Background())
}

func (i GetConfigPartArgs) ToGetConfigPartOutputWithContext(ctx context.Context) GetConfigPartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigPartOutput)
}

// GetConfigPartArrayInput is an input type that accepts GetConfigPartArray and GetConfigPartArrayOutput values.
// You can construct a concrete instance of `GetConfigPartArrayInput` via:
//
//          GetConfigPartArray{ GetConfigPartArgs{...} }
type GetConfigPartArrayInput interface {
	pulumi.Input

	ToGetConfigPartArrayOutput() GetConfigPartArrayOutput
	ToGetConfigPartArrayOutputWithContext(context.Context) GetConfigPartArrayOutput
}

type GetConfigPartArray []GetConfigPartInput

func (GetConfigPartArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigPart)(nil)).Elem()
}

func (i GetConfigPartArray) ToGetConfigPartArrayOutput() GetConfigPartArrayOutput {
	return i.ToGetConfigPartArrayOutputWithContext(context.Background())
}

func (i GetConfigPartArray) ToGetConfigPartArrayOutputWithContext(ctx context.Context) GetConfigPartArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigPartArrayOutput)
}

type GetConfigPartOutput struct{ *pulumi.OutputState }

func (GetConfigPartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigPart)(nil)).Elem()
}

func (o GetConfigPartOutput) ToGetConfigPartOutput() GetConfigPartOutput {
	return o
}

func (o GetConfigPartOutput) ToGetConfigPartOutputWithContext(ctx context.Context) GetConfigPartOutput {
	return o
}

// Body content for the part.
func (o GetConfigPartOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigPart) string { return v.Content }).(pulumi.StringOutput)
}

// A MIME-style content type to report in the header for the part.
func (o GetConfigPartOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConfigPart) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

// A filename to report in the header for the part.
func (o GetConfigPartOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConfigPart) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

// A value for the `X-Merge-Type` header of the part,
// to control [cloud-init merging behavior](https://cloudinit.readthedocs.io/en/latest/topics/merging.html).
func (o GetConfigPartOutput) MergeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConfigPart) *string { return v.MergeType }).(pulumi.StringPtrOutput)
}

type GetConfigPartArrayOutput struct{ *pulumi.OutputState }

func (GetConfigPartArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigPart)(nil)).Elem()
}

func (o GetConfigPartArrayOutput) ToGetConfigPartArrayOutput() GetConfigPartArrayOutput {
	return o
}

func (o GetConfigPartArrayOutput) ToGetConfigPartArrayOutputWithContext(ctx context.Context) GetConfigPartArrayOutput {
	return o
}

func (o GetConfigPartArrayOutput) Index(i pulumi.IntInput) GetConfigPartOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigPart {
		return vs[0].([]GetConfigPart)[vs[1].(int)]
	}).(GetConfigPartOutput)
}

func init() {
	pulumi.RegisterOutputType(ConfigPartOutput{})
	pulumi.RegisterOutputType(ConfigPartArrayOutput{})
	pulumi.RegisterOutputType(GetConfigPartOutput{})
	pulumi.RegisterOutputType(GetConfigPartArrayOutput{})
}
